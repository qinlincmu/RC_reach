continuous reachability
{
 state var pos_x, pos_y, psi, v, t
 
 par
 {
   vehicle.L = 0.257
   vehicle.L_f = 0.115
   kp = 2.5
   Lfc = 1
   k = 1
   y_d = 2
   x_d = 2
   v_d = 1
 }
 
 setting
 {
   fixed steps 0.1
   time 1
   remainder estimation 1e-2
   identity precondition
   gnuplot octagon pos_x , pos_y
   #adaptive orders { min 9 , max 10 }
   #time-inv
   #{w}
   fixed orders 5
   cutoff 1e-3
   precision 53
   output RC_kinematic_purepursuit_constant
   print on
 }
 
 nonpoly ode
 {
   #time-inv
   #{x_d, y_d, v_d}
   pos_x' = v * cos(psi)
   pos_y' = v * sin(psi)
   psi' = 2 * vehicle.L * sin((0.7854 * y_d - 0.7854 * pos_y)/(x_d - pos_x) - psi) * v/(k * v * vehicle.L+ Lfc * vehicle.L)
   v' = kp * (v_d - v)
   t' = 1
 }
 init
 {
  pos_x in [0.0, 0.01]
  pos_y in [0.0, 0.01]
  psi in [0.0, 0.01]
  v in [0.1, 0.11]
  #w in [-0.01, 0.01]
 }
}
